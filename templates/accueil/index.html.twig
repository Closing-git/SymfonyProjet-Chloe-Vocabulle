{% extends 'base.html.twig' %}

{% block title %}Accueil
{% endblock %}

{% block body %}

	{{ form_start(form, {'attr': {'id': 'recherche-form',
								'data-route': path('app_recherche') }}) }}
	{{ form_row(form.langue) }}
	{{ form_row(form.ordre) }}
	{{ form_row(form.statut) }}
	{{ form_row(form.ownCreator) }}
	{{ form_row(form.fav) }}
	{{ form_row(form.titre) }}

	{{ form_end(form) }}

	<br>
	<button>Ajouter une liste</button>
	<br><br>
	<div class='cards-contener'>
		<button>A gauche</button>
		{% for liste in listesVocabulaire %}
			<div class="card">
				<p class="titre-liste">Titre de la liste :
					{{liste.titre}}</p>
				<span class="langues-liste">Langues :
				</span>
				{% for langue in liste.getLangues() %}
					<span class="langue">{{ langue.nom }}</span>
				{% endfor %}
				<p class="createur-liste">Créateur :
					{{ liste.getCreateur().getNom() }}</p>
				<p class="statut-liste">Statut :
					{% if liste.publicStatut %}Public{% else %}Privé
					{% endif %}
				</p>
				<span class="note-liste">Note :</span>
				{% if liste.getNoteTotale() %}
					{{liste.getNoteTotale()}}
				{% else %}
					<div class="pas-de-note">
						<span>Pas encore de note
						</span>
					</div>
				{% endif %}

				<p class="favori-liste">Favori :
					{% if app.user in (liste.getUtilisateursQuiFav()) %}
						OUI
					{% else %}
						NON
					{% endif %}
				</p>

				<p class="meilleur-score">Meilleur Score :
					{{ liste.getBestScoreMostDifficult(app.user) }}
				</p>


				{# Changer le path plus tard #}
				<a href="{{path('app_afficher_forms', {id_liste:liste.id} )}}">
					<button class="play-button">Play</button>
				</a>
				<a href="{{path('app_afficher_forms', {id_liste:liste.id} )}}">
					<button class="modifier-button">Modifier</button>
				</a>
				<a href="{{path('app_afficher_forms', {id_liste:liste.id} )}}">
					<button class="supprimer-button">Supprimer</button>
				</a>


				<br><br>
			</div>
		{% endfor %}
		<button>A droite</button>

	</div>
	<br>
	<button>Ajouter une liste</button>

	<script>
		// ajax
const formRecherche = document.querySelector("#recherche-form");
const divResultat = document.querySelector(".cards-contener");


formRecherche.addEventListener("submit", function (event) {
event.preventDefault();
});

formRecherche.addEventListener('change', function (event) {

const formData = new FormData(formRecherche);
console.log(formRecherche.dataset.route);

axios.post(formRecherche.dataset.route, formData, {
headers: {
'Content-Type': 'multipart/form-data'
}

}).then(function (donnees) { // Vider la div de son contenu :
divResultat.textContent = "";

donnees.data.forEach(function (donnee) {

const divCard = document.createElement("div");
divCard.classList.add("card");

// Titre de la liste
const pTitre = document.createElement("p");
pTitre.classList.add("titre-liste");
pTitre.textContent = "Titre de la liste : " + donnee.titre;
divCard.appendChild(pTitre);

// Langues
const spanLangues = document.createElement("span");
spanLangues.classList.add("langues-liste");
spanLangues.textContent = "Langues : ";
divCard.appendChild(spanLangues);

donnee.langues.forEach(function (langue) {
const spanLangue = document.createElement("span");
spanLangue.classList.add("langue");
spanLangue.textContent = langue.nom;
divCard.appendChild(spanLangue);
});

// Créateur
const pCreateur = document.createElement("p");
pCreateur.classList.add("createur-liste");
pCreateur.textContent = "Créateur : " + donnee.createur.nom;
divCard.appendChild(pCreateur);

// Statut
const pStatut = document.createElement("p");
pStatut.classList.add("statut-liste");
pStatut.textContent = "Statut : " + (
donnee.publicStatut ? "Public" : "Privé"
);
divCard.appendChild(pStatut);

// Note
const spanNote = document.createElement("span");
spanNote.classList.add("note-liste");
spanNote.textContent = "Note : ";
divCard.appendChild(spanNote);


if (donnee.noteTotale) {
const noteText = document.createTextNode(donnee.noteTotale);
divCard.appendChild(noteText);
} else {
const divPasDeNote = document.createElement("div");
divPasDeNote.classList.add("pas-de-note");

const spanPasDeNote = document.createElement("span");
spanPasDeNote.textContent = "Pas encore de note";
divPasDeNote.appendChild(spanPasDeNote);

divCard.appendChild(divPasDeNote);
}

const userId = document.querySelector('#userId').value;
// Favori
const pFavori = document.createElement("p");
pFavori.classList.add("favori-liste");
pFavori.textContent = "Favori : " + (
donnee.utilisateursQuiFav.includes(userId) ? "OUI" : "NON"
);
divCard.appendChild(pFavori);

// Meilleur score
const pScore = document.createElement("p");
pScore.classList.add("meilleur-score");
pScore.textContent = "Meilleur Score : " + donnee.bestScoreMostDifficult;
divCard.appendChild(pScore);

// Boutons (modifier les URLs si nécessaire)
const playButton = document.createElement("a");
playButton.href = `/formulaire/${
donnee.id
}`;
playButton.innerHTML = `<button class="play-button">Play</button>`;
divCard.appendChild(playButton);

const modifierButton = document.createElement("a");
modifierButton.href = `/formulaire/${
donnee.id
}`;
modifierButton.innerHTML = `<button class="modifier-button">Modifier</button>`;
divCard.appendChild(modifierButton);

const supprimerButton = document.createElement("a");
supprimerButton.href = `/formulaire/${
donnee.id
}`;
supprimerButton.innerHTML = `<button class="supprimer-button">Supprimer</button>`;
divCard.appendChild(supprimerButton);

// Saut de ligne
divCard.appendChild(document.createElement("br"));
divCard.appendChild(document.createElement("br"));

// Ajouter la carte au résultat
divResultat.appendChild(divCard);

})


});

});
	</script>

{% endblock %}
